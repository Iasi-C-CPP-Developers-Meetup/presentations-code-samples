/*
* generated by Xtext
*/
grammar InternalDbDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package ro.meetup.cpp.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ro.meetup.cpp.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ro.meetup.cpp.dsl.services.DbDslGrammarAccess;

}

@parser::members {

 	private DbDslGrammarAccess grammarAccess;
 	
    public InternalDbDslParser(TokenStream input, DbDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected DbDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='persons' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getPersonsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPersonsPersonParserRuleCall_2_0()); 
	    }
		lv_persons_2_0=rulePerson		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"persons",
        		lv_persons_2_0, 
        		"Person");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='meetings' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModelAccess().getMeetingsKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModelAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getMeetingsMeetingParserRuleCall_5_0()); 
	    }
		lv_meetings_5_0=ruleMeeting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"meetings",
        		lv_meetings_5_0, 
        		"Meeting");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;







// Entry rule entryRulePerson
entryRulePerson returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPersonRule()); }
	 iv_rulePerson=rulePerson 
	 { $current=$iv_rulePerson.current; } 
	 EOF 
;

// Rule Person
rulePerson returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getPersonAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPersonRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPersonAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		lv_firstName_2_0=RULE_ID
		{
			newLeafNode(lv_firstName_2_0, grammarAccess.getPersonAccess().getFirstNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPersonRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"firstName",
        		lv_firstName_2_0, 
        		"ID");
	    }

)
)(
(
		lv_lastName_3_0=RULE_ID
		{
			newLeafNode(lv_lastName_3_0, grammarAccess.getPersonAccess().getLastNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPersonRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lastName",
        		lv_lastName_3_0, 
        		"ID");
	    }

)
)(
(
		lv_birthDate_4_0=RULE_DATE
		{
			newLeafNode(lv_birthDate_4_0, grammarAccess.getPersonAccess().getBirthDateDATETerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPersonRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"birthDate",
        		lv_birthDate_4_0, 
        		"DATE");
	    }

)
)(
(
		lv_address_5_0=RULE_STRING
		{
			newLeafNode(lv_address_5_0, grammarAccess.getPersonAccess().getAddressSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPersonRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"address",
        		lv_address_5_0, 
        		"STRING");
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPersonAccess().getRightCurlyBracketKeyword_6());
    }
)
;









// Entry rule entryRuleMeeting
entryRuleMeeting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMeetingRule()); }
	 iv_ruleMeeting=ruleMeeting 
	 { $current=$iv_ruleMeeting.current; } 
	 EOF 
;

// Rule Meeting
ruleMeeting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMeetingAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_date_1_0=RULE_DATE
		{
			newLeafNode(lv_date_1_0, grammarAccess.getMeetingAccess().getDateDATETerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMeetingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"date",
        		lv_date_1_0, 
        		"DATE");
	    }

)
)	otherlv_2='presentations' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMeetingAccess().getPresentationsKeyword_2());
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMeetingAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMeetingAccess().getPresentationsPresentationParserRuleCall_4_0()); 
	    }
		lv_presentations_4_0=rulePresentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMeetingRule());
	        }
       		add(
       			$current, 
       			"presentations",
        		lv_presentations_4_0, 
        		"Presentation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='participants' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMeetingAccess().getParticipantsKeyword_5());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMeetingAccess().getColonKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMeetingRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getMeetingAccess().getParticipantsPersonCrossReference_7_0()); 
	}

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMeetingAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRulePresentation
entryRulePresentation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPresentationRule()); }
	 iv_rulePresentation=rulePresentation 
	 { $current=$iv_rulePresentation.current; } 
	 EOF 
;

// Rule Presentation
rulePresentation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPresentationAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_title_1_0=RULE_STRING
		{
			newLeafNode(lv_title_1_0, grammarAccess.getPresentationAccess().getTitleSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPresentationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_1_0, 
        		"STRING");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPresentationRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getPresentationAccess().getPresentersPersonCrossReference_2_0()); 
	}

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPresentationAccess().getRightCurlyBracketKeyword_3());
    }
)
;





RULE_DATE : RULE_INT '.' RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


