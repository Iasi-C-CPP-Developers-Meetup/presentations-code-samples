/*
 * generated by Xtext
 */
package ro.meetup.cpp.dsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import ro.meetup.cpp.dsl.dbDsl.Meeting
import ro.meetup.cpp.dsl.dbDsl.Model

class DbDslGenerator implements IGenerator {
		
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		fsa.generateFile("DatabaseImporter.cpp", toCppCode(resource.contents.head as Model))
		fsa.generateFile("DatabaseImporter.hpp", toHppCode(resource.contents.head as Model))
	}
	
	def CharSequence toHppCode(Model m) {'''
	class DatabaseImporter
	{
		public:
			void import();
	};
	'''
	}

	
	def CharSequence toCppCode(Model model) {'''
		#include "DatabaseImporter.hpp"
		#include <iostream>
		
		void DatabaseImporter::import()
		{
		std::cout << "importing persons:" << std::endl;
		«FOR p : model.persons»
			std::cout << "   «p.firstName» «p.lastName», address: «p.address», birthdate: «p.birthDate»" << std::endl;
		«ENDFOR»
		std::cout << "\nimporting meetings:" << std::endl;
		«FOR m : model.meetings»
			«m.toCppCode»
		«ENDFOR»
		}
	'''
	}
	
	def toCppCode(Meeting m) { '''
		std::cout << "   «m.date»" << std::endl;
		std::cout << "      presentations:" << std::endl;
		«FOR p : m.presentations»
			std::cout << "         «p.title» by: ";
			«FOR pers : p.presenters» 
			std::cout << "«pers.firstName» «pers.lastName» ,";
			«ENDFOR»
			std::cout << std::endl;
		«ENDFOR»
		std::cout << "      participants:" << std::endl;
		«FOR p : m.participants»
			std::cout << "         «p.firstName» «p.lastName» " << std::endl;
		«ENDFOR»
	'''
	}
}
