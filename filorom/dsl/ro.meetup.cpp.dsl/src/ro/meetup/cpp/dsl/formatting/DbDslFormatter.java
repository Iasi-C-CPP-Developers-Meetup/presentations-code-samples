/*
 * generated by Xtext
 */
package ro.meetup.cpp.dsl.formatting;

import org.eclipse.internal.xtend.util.Pair;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;

import ro.meetup.cpp.dsl.services.DbDslGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class DbDslFormatter extends AbstractDeclarativeFormatter {
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
		DbDslGrammarAccess f = (DbDslGrammarAccess)getGrammarAccess();
		
        // set indentation inside all curly brackets 
        // set line wrap after each left curly bracket
        // set line wrap around each right curly bracket
        for(org.eclipse.xtext.util.Pair<Keyword, Keyword> p : f.findKeywordPairs("{", "}")) {
            c.setIndentationIncrement().after(p.getFirst());
            c.setIndentationDecrement().before(p.getSecond());
            c.setLinewrap().after(p.getFirst());
            c.setLinewrap().around(p.getSecond());
        }
	}
}
