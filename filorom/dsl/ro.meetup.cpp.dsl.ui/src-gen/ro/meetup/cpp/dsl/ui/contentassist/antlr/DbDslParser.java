/*
* generated by Xtext
*/
package ro.meetup.cpp.dsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import ro.meetup.cpp.dsl.services.DbDslGrammarAccess;

public class DbDslParser extends AbstractContentAssistParser {
	
	@Inject
	private DbDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected ro.meetup.cpp.dsl.ui.contentassist.antlr.internal.InternalDbDslParser createParser() {
		ro.meetup.cpp.dsl.ui.contentassist.antlr.internal.InternalDbDslParser result = new ro.meetup.cpp.dsl.ui.contentassist.antlr.internal.InternalDbDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRoleAccess().getAlternatives(), "rule__Role__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getPersonAccess().getGroup(), "rule__Person__Group__0");
					put(grammarAccess.getMeetingAccess().getGroup(), "rule__Meeting__Group__0");
					put(grammarAccess.getPresentationAccess().getGroup(), "rule__Presentation__Group__0");
					put(grammarAccess.getModelAccess().getPersonsAssignment_2(), "rule__Model__PersonsAssignment_2");
					put(grammarAccess.getModelAccess().getMeetingsAssignment_5(), "rule__Model__MeetingsAssignment_5");
					put(grammarAccess.getPersonAccess().getNameAssignment_0(), "rule__Person__NameAssignment_0");
					put(grammarAccess.getPersonAccess().getFirstNameAssignment_2(), "rule__Person__FirstNameAssignment_2");
					put(grammarAccess.getPersonAccess().getLastNameAssignment_3(), "rule__Person__LastNameAssignment_3");
					put(grammarAccess.getPersonAccess().getBirthDateAssignment_4(), "rule__Person__BirthDateAssignment_4");
					put(grammarAccess.getPersonAccess().getAddressAssignment_5(), "rule__Person__AddressAssignment_5");
					put(grammarAccess.getParticipantAccess().getPersonAssignment(), "rule__Participant__PersonAssignment");
					put(grammarAccess.getMeetingAccess().getDateAssignment_1(), "rule__Meeting__DateAssignment_1");
					put(grammarAccess.getMeetingAccess().getPresentationsAssignment_4(), "rule__Meeting__PresentationsAssignment_4");
					put(grammarAccess.getMeetingAccess().getParticipantsAssignment_7(), "rule__Meeting__ParticipantsAssignment_7");
					put(grammarAccess.getPresentationAccess().getTitleAssignment_1(), "rule__Presentation__TitleAssignment_1");
					put(grammarAccess.getPresentationAccess().getPresentersAssignment_2(), "rule__Presentation__PresentersAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			ro.meetup.cpp.dsl.ui.contentassist.antlr.internal.InternalDbDslParser typedParser = (ro.meetup.cpp.dsl.ui.contentassist.antlr.internal.InternalDbDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DbDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DbDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
